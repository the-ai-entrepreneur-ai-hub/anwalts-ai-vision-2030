version: '3.8'

services:
  # Secure Sanitizer Service (PII-safe processing)
  sanitizer:
    build:
      context: ./law-firm-ai
      dockerfile: Dockerfile
    container_name: pii_sanitizer_service
    ports:
      - "5001:5001"
    environment:
      - LLM_MODEL_NAME=deepseek-ai/DeepSeek-V3
      - DEBUG=false
    # Supply secrets via local .env (not committed)
    env_file:
      - .env
    networks:
      - anwalts_network
    restart: unless-stopped
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: anwalts_postgres
    environment:
      POSTGRES_DB: anwalts_ai_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - anwalts_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: anwalts_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - anwalts_network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: anwalts_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/anwalts_ai_db
      - REDIS_URL=redis://redis:6379/0
      - TOGETHER_API_KEY=5b5174dc42932c781810d4be36a11435fe07cdf2d95b8cac17c29c7f87e10720
      - DEFAULT_AI_MODEL=deepseek-ai/DeepSeek-V3
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production-minimum-256-bits-long
      - ENVIRONMENT=development
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:5500,http://localhost:5500
      - SANITIZER_URL=http://sanitizer:5001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      sanitizer:
        condition: service_started
    networks:
      - anwalts_network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # Nginx for Frontend (Optional)
  frontend:
    image: nginx:alpine
    container_name: anwalts_frontend
    ports:
      - "3000:80"
    volumes:
      - ./Client:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - anwalts_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  anwalts_network:
    driver: bridge