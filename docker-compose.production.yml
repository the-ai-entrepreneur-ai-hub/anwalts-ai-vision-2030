version: '3.8'

services:
  # Secure Sanitizer Service (PII-safe processing)
  sanitizer:
    build:
      context: ./law-firm-ai
      dockerfile: Dockerfile
    container_name: pii_sanitizer_service_prod
    restart: unless-stopped
    ports:
      - "127.0.0.1:5001:5001"  # internal only; proxied via backend
    environment:
      - DEBUG=false
    env_file:
      - .env
    networks:
      - anwalts_network
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: anwalts_postgres_prod
    environment:
      POSTGRES_DB: anwalts_ai_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: SecurePass123!
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "127.0.0.1:5432:5432"  # Only local access
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d anwalts_ai_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    networks:
      - anwalts_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: anwalts_redis_prod
    command: redis-server --appendonly yes --requirepass "RedisSecurePass123!"
    ports:
      - "127.0.0.1:6379:6379"  # Only local access
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "RedisSecurePass123!", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - anwalts_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # FastAPI Backend (Your Fixed Backend)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - BUILD_ENV=production
    container_name: anwalts_backend_prod
    ports:
      - "127.0.0.1:8000:8000"  # Only local access
    environment:
      - NODE_ENV=production
      - DEBUG=false
      - DATABASE_URL=postgresql://postgres:SecurePass123!@postgres:5432/anwalts_ai_db
      - REDIS_URL=redis://:RedisSecurePass123!@redis:6379/0
      - TOGETHER_API_KEY=5b5174dc42932c781810d4be36a11435fe07cdf2d95b8cac17c29c7f87e10720
      - DEFAULT_AI_MODEL=deepseek-ai/DeepSeek-V3
      - JWT_SECRET_KEY=AnwaltsAI-Production-JWT-Secret-Key-2025-Very-Long-And-Secure-256-Bits
      - SECRET_KEY=AnwaltsAI-Production-Secret-Key-For-Sessions-And-Encryption-Very-Secure
      - CORS_ORIGINS=http://148.251.195.222,https://148.251.195.222
      - SANITIZER_URL=http://sanitizer:5001
      - DATASET_PATH=/app/data
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      sanitizer:
        condition: service_started
    volumes:
      - ./Data:/app/data:ro           # Legal dataset (read-only)
      - ./logs:/app/logs              # Application logs
      - /opt/anwalts-ai/backups:/app/backups  # Backup directory
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    networks:
      - anwalts_network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # Frontend (Static Files)
  frontend:
    image: nginx:alpine
    container_name: anwalts_frontend_prod
    ports:
      - "127.0.0.1:3000:80"  # Only local access
    volumes:
      - ./Client:/usr/share/nginx/html:ro
      - ./config/nginx-frontend.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    networks:
      - anwalts_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy (Public Access)
  nginx:
    image: nginx:alpine
    container_name: anwalts_nginx_prod
    ports:
      - "80:80"              # Public HTTP
      - "443:443"            # Public HTTPS (future)
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/ssl:/etc/nginx/ssl:ro  # SSL certificates
      - ./logs:/var/log/nginx           # Nginx logs
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - anwalts_network
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/anwalts-ai/data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/anwalts-ai/data/redis

networks:
  anwalts_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16